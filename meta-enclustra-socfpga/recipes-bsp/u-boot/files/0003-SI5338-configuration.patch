From ba6e7a417916f2fd1bdee2d08f11bd4069bed773 Mon Sep 17 00:00:00 2001
From: Andreas Buerkler <andreas.buerkler@enclustra.com>
Date: Fri, 9 Jun 2023 15:35:39 +0200
Subject: [PATCH] SI5338 configuration

---
 board/altera/arria10-socdk/Makefile        |   1 +
 board/altera/arria10-socdk/si5338_config.c | 164 +++++++++++++++++++++
 board/altera/arria10-socdk/si5338_config.h |  12 ++
 board/altera/arria10-socdk/socfpga.c       |   9 ++
 4 files changed, 186 insertions(+)
 create mode 100644 board/altera/arria10-socdk/si5338_config.c
 create mode 100644 board/altera/arria10-socdk/si5338_config.h

diff --git a/board/altera/arria10-socdk/Makefile b/board/altera/arria10-socdk/Makefile
index 80d0004346..f9939283a9 100644
--- a/board/altera/arria10-socdk/Makefile
+++ b/board/altera/arria10-socdk/Makefile
@@ -3,3 +3,4 @@
 # Copyright (C) 2015 Altera Corporation <www.altera.com>
 
 obj-y	:= socfpga.o
+obj-y	+= si5338_config.o
diff --git a/board/altera/arria10-socdk/si5338_config.c b/board/altera/arria10-socdk/si5338_config.c
new file mode 100644
index 0000000000..3875d38ae6
--- /dev/null
+++ b/board/altera/arria10-socdk/si5338_config.c
@@ -0,0 +1,164 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2022 Enclustra GmbH
+ * <info@enclustra.com>
+ */
+
+#include <i2c.h>
+#include <linux/delay.h>
+#include "si5338_config.h"
+#include "Si5338-RevB-Registers.h"
+
+int i2c_write_simple(struct udevice *dev, u8 addr, u8 data)
+{
+        unsigned char buf[1];
+        buf[0] = data;
+        if (dm_i2c_write(dev, addr, buf, 1) != 0) {
+                printf("SI5338 I2C write failed: %02x, %02x\n", addr, data);
+                return -1;
+        }
+        return 0;
+}
+
+int i2c_write_masked(struct udevice *dev, u8 addr, u8 data, u8 mask)
+{
+        if (mask == 0x00) return 0;
+        if (mask == 0xff) return i2c_write_simple(dev, addr, data);
+
+        unsigned char buf[1];
+        if (dm_i2c_read(dev, addr, buf, 1) != 0) {
+                printf("SI5338 I2C read failed\n");
+                return -1;
+        }
+        buf[0] &= ~mask;
+        buf[0] |= data & mask;
+        if (dm_i2c_write(dev, addr, buf, 1) != 0) {
+                printf("SI5338 I2C write failed: %02x, %02x, %02x\n", addr, data, mask);
+                return -1;
+        }
+        return 0;
+}
+
+int si5338_init(void)
+{
+        unsigned char buf[1];
+        struct udevice *dev;
+
+        if (i2c_get_chip_for_busnum(0, 0x70, 1, &dev) != 0) {
+                printf("SI5338 I2C init failed\n");
+                return -1;
+        }
+
+        if (dm_i2c_set_bus_speed(dev, 100000) != 0) {
+                printf("SI5338 I2C set speed failed\n");
+                return -1;
+        }
+
+        // set page to 0
+        if (i2c_write_simple(dev, 255, 0x00)) {
+                return -1;
+        }
+
+        // disable outputs
+        if (i2c_write_masked(dev, 230, 0x10, 0x10)) {
+                return -1;
+        }
+
+        // pause lol
+        if (i2c_write_masked(dev, 241, 0x80, 0x80)) {
+                return -1;
+        }
+
+        // write new configuration
+        for (int i=0; i<NUM_REGS_MAX; i++) {
+                if (i2c_write_masked(dev, Reg_Store[i].Reg_Addr, Reg_Store[i].Reg_Val, Reg_Store[i].Reg_Mask)) {
+                        return -1;
+                }
+        }
+
+        // validate input clock status
+        do {
+                if (dm_i2c_read(dev, 218, buf, 1) != 0) {
+                        printf("SI5338 I2C read failed\n");
+                        return -1;
+                }
+        }
+        while ((buf[0] & 0x04) != 0);
+
+        // configure PLL for locking
+        if (i2c_write_masked(dev, 49, 0, 0x80)) {
+                return -1;
+        }
+
+        // initiate locking of PLL
+        if (i2c_write_simple(dev, 246, 0x02)) {
+                return -1;
+        }
+
+        // wait 25ms (100ms to be on the safe side)
+        mdelay(100);
+
+        // restart lol
+        if (i2c_write_masked(dev, 241, 0x65, 0xff)) {
+                return -1;
+        }
+
+        // confirm PLL lock status
+        int try = 0;
+        do {
+                if (dm_i2c_read(dev, 218, buf, 1) != 0) {
+                        printf("SI5338 I2C read failed\n");
+                        return -1;
+                }
+                mdelay(100);
+                try++;
+                if (try > 10) {
+                    printf("SI5338 PLL is not locking\n");
+                    return -1;
+                }
+        }
+        while ((buf[0] & 0x15) != 0);
+
+        // copy fcal values to active registers
+        if (dm_i2c_read(dev, 237, buf, 1) != 0) {
+                printf("SI5338 I2C failed\n");
+                return -1;
+        }
+        if (i2c_write_masked(dev, 47, buf[0], 0x03)) {
+                return -1;
+        }
+
+        if (dm_i2c_read(dev, 236, buf, 1) != 0) {
+                printf("SI5338 I2C failed\n");
+                return -1;
+        }
+        if (i2c_write_masked(dev, 46, buf[0], 0xFF)) {
+                return -1;
+        }
+
+        if (dm_i2c_read(dev, 235, buf, 1) != 0) {
+                printf("SI5338 I2C failed\n");
+                return -1;
+        }
+        if (i2c_write_simple(dev, 45, buf[0])) {
+                return -1;
+        }
+
+        if (i2c_write_masked(dev, 47, 0x14, 0xFC)) {
+                return -1;
+        }
+
+        // set PLL to use FCAL values
+        if (i2c_write_masked(dev, 49, 0x80, 0x80)) {
+                return -1;
+        }
+
+        // enable outputs
+        if (i2c_write_simple(dev, 230, 0x00)) {
+                return -1;
+        }
+
+        printf("SI5338 init successful\n");
+
+        return 0;
+};
diff --git a/board/altera/arria10-socdk/si5338_config.h b/board/altera/arria10-socdk/si5338_config.h
new file mode 100644
index 0000000000..54a538b0a0
--- /dev/null
+++ b/board/altera/arria10-socdk/si5338_config.h
@@ -0,0 +1,12 @@
+// SPDX-License-Identifier: GPL-2.0+
+/*
+ * Copyright (C) 2022 Enclustra GmbH
+ * <info@enclustra.com>
+ */
+
+#ifndef __SI5338_INIT_H
+#define __SI5338_INIT_H
+
+int si5338_init(void);
+
+#endif
diff --git a/board/altera/arria10-socdk/socfpga.c b/board/altera/arria10-socdk/socfpga.c
index 4c466cb944..5e7b3ae726 100644
--- a/board/altera/arria10-socdk/socfpga.c
+++ b/board/altera/arria10-socdk/socfpga.c
@@ -4,3 +4,12 @@
  */
 
 #include <common.h>
+#include <i2c.h>
+#include <linux/delay.h>
+#include "si5338_config.h"
+
+int board_late_init(void)
+{
+    si5338_init();
+    return 0;
+}
-- 
2.25.1

