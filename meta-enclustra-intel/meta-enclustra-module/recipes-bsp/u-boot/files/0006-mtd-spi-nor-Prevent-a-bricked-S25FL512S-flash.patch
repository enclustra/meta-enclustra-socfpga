From 8be504ffbba144e9ccdc49593a8405b62e616b3c Mon Sep 17 00:00:00 2001
From: Andreas Buerkler <andreas.buerkler@enclustra.com>
Date: Fri, 1 Dec 2023 15:38:22 +0100
Subject: [PATCH 8/8] mtd: spi-nor: Prevent a bricked S25FL512S flash

The block protection flags on S25FL512S QSPI flash devices can
be set accidentally when power is lost during a write command.
This modifications clears the protection flags, to made the
flash device writable.
Additionally the latency code bits are cleared to make sure the
boot process does not fail.

Signed-off-by: Andreas Buerkler <andreas.buerkler@enclustra.com>
---
 drivers/mtd/spi/spi-nor-core.c | 43 ++++++++++++++++++++++++++++++++++
 1 file changed, 43 insertions(+)

diff --git a/drivers/mtd/spi/spi-nor-core.c b/drivers/mtd/spi/spi-nor-core.c
index 1ea8363d9f..ce27487453 100644
--- a/drivers/mtd/spi/spi-nor-core.c
+++ b/drivers/mtd/spi/spi-nor-core.c
@@ -3880,6 +3880,40 @@ void spi_nor_set_fixups(struct spi_nor *nor)
 #endif /* SPI_FLASH_MACRONIX */
 }
 
+int spi_nor_clear_protection(struct spi_nor *nor)
+{
+	u8 sr_cr[2];
+	u8 sr = 0;
+	u8 cr = 0;
+
+	sr_cr[0] = read_sr(nor);
+	sr = sr_cr[0];
+	sr_cr[1] = read_cr(nor);
+	cr = sr_cr[1];
+
+	if (sr_cr[0] & 0x1c)
+	{
+		sr_cr[0] &= ~0x1c; // clear block protection
+		sr_cr[1] &= ~0xc0; // clear latency code bits
+
+		int ret = write_sr_cr(nor, sr_cr);
+		if (ret < 0)
+			return ret;
+
+		// read the written registers again to verify the content
+		sr_cr[0] = read_sr(nor);
+		sr_cr[1] = read_cr(nor);
+
+		printf("---------------- WARNING ---------------\n");
+		printf("QSPI flash block protection bits cleared\n");
+		printf("SR1 = %02x -> %02x\n", sr, sr_cr[0]);
+		printf("CR1 = %02x -> %02x\n", cr, sr_cr[1]);
+		printf("----------------------------------------\n");
+	}
+
+	return 0;
+}
+
 int spi_nor_scan(struct spi_nor *nor)
 {
 	struct spi_nor_flash_parameter params;
@@ -3936,6 +3970,15 @@ int spi_nor_scan(struct spi_nor *nor)
 		return -ENOENT;
 	nor->info = info;
 
+	/* clear protection flags for s25fl512 devices */
+	u8 id_s25fl512s[3] = {0x01, 0x02, 0x20};
+	if ((strncmp(nor->info->id, id_s25fl512s, 3) == 0) && (nor->info->id_len >= 3))
+	{
+		ret = spi_nor_clear_protection(nor);
+		if (ret)
+			return ret;
+	}
+
 	spi_nor_set_fixups(nor);
 
 	/* Parse the Serial Flash Discoverable Parameters table. */
-- 
2.34.1

